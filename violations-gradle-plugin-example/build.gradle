buildscript {
 repositories {
  mavenLocal()
  mavenCentral()
  jcenter()
 }

 dependencies {
  classpath "se.bjurr.violations:violations-gradle-plugin:1.9-SNAPSHOT"
 }
}

apply plugin: "java"
apply plugin: "se.bjurr.violations.violations-gradle-plugin"

task violations(type: se.bjurr.violations.gradle.plugin.ViolationsTask) {
 minSeverity = 'INFO' // INFO, WARN or ERROR
 detailLevel = 'VERBOSE' // PER_FILE_COMPACT, COMPACT or VERBOSE
 maxViolations = 99999999 // Will fail the build if total number of found violations is higher
 printViolations = true // Will print violations found in diff

 // diff-properties can be supplied with something like:
 //
 // ./gradlew violations -i -PdiffFrom=e4de20e -PdiffTo=HEAD
 //
 // And in Travis, you could add:
 //
 //  script:
 //   - 'if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then bash ./gradlew check -DdiffFrom=$TRAVIS_PULL_REQUEST_BRANCH -DdiffTo=$TRAVIS_BRANCH ; fi'
 //
 diffFrom = project.properties.diffFrom // Can be empty (ignored), Git-commit or any Git-reference
 diffTo = project.properties.diffTo // Same as above
 diffMinSeverity = 'INFO' // INFO, WARN or ERROR
 diffDetailLevel = 'VERBOSE' // PER_FILE_COMPACT, COMPACT or VERBOSE
 diffMaxViolations = 99 // Will fail the build if number of violations, in the diff within from/to, is higher
 diffPrintViolations = true // Will print violations found in diff
 gitRepo = file('.') // Where to look for Git

 violations = [
  ["FINDBUGS",   ".", ".*/findbugs/.*\\.xml\$",   "Findbugs"],
  ["PMD",        ".", ".*/pmd/.*\\.xml\$",        "PMD"],
  ["CHECKSTYLE", ".", ".*/checkstyle/.*\\.xml\$", "Checkstyle"],
  ["JSHINT",     ".", ".*/jshint/.*\\.xml\$",     "JSHint"],
  ["CSSLINT",    ".", ".*/csslint/.*\\.xml\$",    "CssLint"]
 ]
}
